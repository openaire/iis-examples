<workflow-app xmlns="uri:oozie:workflow:0.5" name="test-core_examples_id_extractor">
    <start to="producer"/>
    <action name="producer">
        <java>
            <job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
            <!-- The data generated by this node is deleted in this section -->
            <prepare>
                <delete path="${nameNode}${workingDir}/producer" />
                <mkdir path="${nameNode}${workingDir}/producer" />
            </prepare>
            <configuration>
                <property>
                    <name>mapred.job.queue.name</name>
                    <value>${queueName}</value>
                </property>
            </configuration>
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <arg>eu.dnetlib.iis.core.examples.java.TextDataProducer</arg>
            <!-- All input and output ports have to be bound to paths in 
            HDFS, working directory has to be specified as well -->
            <arg>-Operson=${workingDir}/producer/person.csv</arg>
            <arg>-Odocument=${workingDir}/producer/doc.csv</arg>
        </java>
        <ok to="spark_node"/>
        <error to="fail"/>
    </action>
    <action name="spark_node">
        <spark xmlns="uri:oozie:spark-action:0.1">
            <job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
            <prepare>
                <delete path="${nameNode}${workingDir}/output" />
                <mkdir path="${nameNode}${workingDir}/output" />
            </prepare>

            <master>yarn-cluster</master>
            <mode>cluster</mode>
            <name>id_extractor</name>
            <class>eu.dnetlib.iis.core.examples.spark.PersonIdExtractor</class>
            <jar>${wf:conf('oozie.wf.application.path')}/lib/iis-wf-core-examples-${projectVersion}.jar</jar>
            <arg>${workingDir}/producer/person.csv</arg>
            <arg>${workingDir}/output/person_id</arg>
        </spark>
        <ok to="end"/>
        <error to="fail"/>
    </action>
    <kill name="fail">
        <message>Unfortunately, the workflow failed -- error message:
            [${wf:errorMessage(wf:lastErrorNode())}]</message>
    </kill>
    <end name="end"/>
</workflow-app>
