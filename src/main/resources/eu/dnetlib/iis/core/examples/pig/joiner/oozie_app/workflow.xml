<workflow-app xmlns="uri:oozie:workflow:0.4" name="test-core_examples_pig_joiner">
    
    <global>
        <job-tracker>${jobTracker}</job-tracker>
        <name-node>${nameNode}</name-node>
        <configuration>
            <property>
                <name>mapreduce.job.queuename</name>
                <value>${queueName}</value>
            </property>
            <property>
                <name>oozie.launcher.mapred.job.queue.name</name>
                <value>${oozieLauncherQueueName}</value>
            </property>
        </configuration>
    </global>
    
    
    <start to="generate-schema" />

	<action name="generate-schema">
	    <java>
	        <main-class>eu.dnetlib.iis.common.javamapreduce.hack.AvroSchemaGenerator</main-class>
	        <arg>eu.dnetlib.iis.core.examples.schemas.documentandauthor.Document</arg>
	        <arg>eu.dnetlib.iis.core.examples.schemas.documentandauthor.Person</arg>
	        <arg>eu.dnetlib.iis.core.examples.schemas.documentandauthor.DocumentWithAuthors</arg>
	        <arg>eu.dnetlib.iis.core.examples.schemas.documentandauthor.personwithdocuments.PersonWithDocuments</arg>
	        <arg>eu.dnetlib.iis.core.examples.schemas.documentandauthor.PersonAge</arg>
	        <capture-output />
	    </java>
	    <ok to="producer" />
	    <error to="fail" />
	</action>
    
    <action name="producer">
        <java>
			<!-- The data generated by this node is deleted in this section -->
			<prepare>
				<delete path="${nameNode}${workingDir}/producer" />
				<mkdir path="${nameNode}${workingDir}/producer" />
			</prepare>
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <arg>eu.dnetlib.iis.core.examples.java.SampleDataProducer</arg>
            <!-- All input and output ports have to be bound to paths in 
            HDFS, working directory has to be specified as well -->
            <arg>-Operson=${workingDir}/producer/person</arg>
            <arg>-Odocument=${workingDir}/producer/doc</arg>
        </java>
        <ok to="joiner"/>
        <error to="fail"/>
    </action>
    <action name="joiner">
        <pig>
			<!-- The data generated by this node is deleted in this section -->
			<prepare>
				<delete path="${nameNode}${workingDir}/joiner" />
				<mkdir path="${nameNode}${workingDir}/joiner" />
			</prepare>
            <!-- Path to PIG script the workflow executes. -->
            <script>lib/scripts/joiner/joiner.pig</script>
            <!-- Input ports. -->
            <param>input_person=${workingDir}/producer/person</param>
            <param>input_document=${workingDir}/producer/doc</param>
            <!-- Output ports. -->
            <param>output_document_with_authors=${workingDir}/joiner/document_with_authors</param>
            <param>output_person_with_documents=${workingDir}/joiner/person_with_documents</param>
            <param>output_person_age=${workingDir}/joiner/person_age</param>

            <param>schema_input_document=${wf:actionData('generate-schema')['eu.dnetlib.iis.core.examples.schemas.documentandauthor.Document']}</param>
            <param>schema_input_person=${wf:actionData('generate-schema')['eu.dnetlib.iis.core.examples.schemas.documentandauthor.Person']}</param>
            <param>schema_output_document_with_authors=${wf:actionData('generate-schema')['eu.dnetlib.iis.core.examples.schemas.documentandauthor.DocumentWithAuthors']}</param>
            <param>schema_output_person_with_documents=${wf:actionData('generate-schema')['eu.dnetlib.iis.core.examples.schemas.documentandauthor.personwithdocuments.PersonWithDocuments']}</param>
            <param>schema_output_person_age=${wf:actionData('generate-schema')['eu.dnetlib.iis.core.examples.schemas.documentandauthor.PersonAge']}</param>
        </pig>
        <ok to="end"/>
        <error to="fail"/>
    </action>
    <kill name="fail">
		<message>Unfortunately, the workflow failed -- error message:
			[${wf:errorMessage(wf:lastErrorNode())}]</message>
    </kill>
    <end name="end"/>
</workflow-app>
