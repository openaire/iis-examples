<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>eu.dnetlib.iis</groupId>
        <artifactId>iis-wf</artifactId>
        <version>1.2.0-SNAPSHOT</version>
    </parent>

    <artifactId>iis-wf-core-examples</artifactId>
    <packaging>jar</packaging>

    <repositories>
        <repository>
            <id>iis-snapshots</id>
            <url>https://maven.ceon.pl/artifactory/iis-snapshots/</url>
	    <releases>
              <enabled>false</enabled>
            </releases>
        </repository>
    </repositories>

    <pluginRepositories>
	<pluginRepository>
            <id>iis-snapshots</id>
            <name>iis snapshots plugin repository</name>
            <url>https://maven.ceon.pl/artifactory/iis-snapshots</url>
	    <releases>
	      <enabled>false</enabled>
	    </releases>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>
        <dependency>
            <groupId>eu.dnetlib.iis</groupId>
            <artifactId>iis-schemas</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>iis-common</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>eu.dnetlib.iis</groupId>
            <artifactId>iis-3rdparty-avro-json</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>iis-common</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_2.11</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_2.11</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-avro_2.11</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>pl.edu.icm.spark-utils</groupId>
            <artifactId>spark-utils_2.11</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Needed to run Pig jobs { -->
        <dependency>
            <groupId>org.apache.pig</groupId>
            <artifactId>pig</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.pig</groupId>
            <artifactId>pigunit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr-runtime</artifactId>
        </dependency>

        <!-- Needed by Avro { -->
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
        </dependency>

        <!-- It seems that this dependency is needed, if it is not here,
        running Oozie tests of Avro-based map-reduce ends up with
        "java.lang.NoClassDefFoundError" exception and statement that
        "Paranamer" class is missing.-->
        <dependency>
            <groupId>com.thoughtworks.paranamer</groupId>
            <artifactId>paranamer</artifactId>
        </dependency>

        <dependency>
            <groupId>com.beust</groupId>
            <artifactId>jcommander</artifactId>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.antlr</groupId>
                <artifactId>antlr-runtime</artifactId>
                <version>3.4</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!-- Plugin that generates Java classes from Avro schemas -->
            <plugin>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>schema</goal>
                            <goal>idl-protocol</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- This plugin makes the Maven->Update Project Configuration not forget
                about the "target/generated-sources/avro" source path -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources/avro/</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
